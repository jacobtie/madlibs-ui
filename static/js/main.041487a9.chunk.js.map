{"version":3,"sources":["services/mainService.ts","components/Home.tsx","components/TemplateCard.tsx","components/Templates.tsx","components/Template.tsx","services/madlibPartsOfSpeech.ts","components/NewTemplate.tsx","components/Madlib.tsx","components/MadlibCard.tsx","components/Madlibs.tsx","App.tsx","index.tsx"],"names":["host","Home","Jumbotron","Container","className","to","window","location","getAllTemplates","a","axios","get","response","data","getTemplate","id","addTemplate","template","post","addMadlib","madlib","getMadlib","getMadlibsByTemplate","TemplateCard","props","Card","style","width","Body","Title","title","display","justifyContent","Button","as","Link","Templates","useState","templates","setTemplates","useEffect","valid","temps","alignItems","fontWeight","gridTemplateColumns","map","key","Template","setTemplate","setTitle","descBody","setDescBody","fields","setFields","name","setName","match","params","res","indices","description","matchAll","index","body","lastIndex","workingFields","partIndex","push","templateWords","partOfSpeech","length","madlibPair","value","forEach","substring","history","handleSubmit","copiedFields","filter","field","some","valueIndex","part","templateId","text","creator","insertedMadlib","Form","Control","placeholder","onChange","e","target","lineHeight","border","borderRadius","handleChange","onClick","suggestions","NewTemplate","setDescription","preventDefault","insertedTemplate","onSubmit","Group","controlId","Label","type","input","overflow","height","margin","highlighter","list","backgroundColor","fontSize","item","padding","borderBottom","control","minHeight","outline","trigger","madlibPartsofSpeech","markup","renderSuggestion","suggestion","search","highlightedDisplay","Madlib","setMadlib","madlibRes","templateRes","MadlibCard","Madlibs","madlibs","setMadlibs","ml","App","Navbar","bg","expand","Brand","Nav","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.041487a9.chunk.js","sourcesContent":["import axios from 'axios';\nimport IMadlibTemplate from '../types/IMadlibTemplate';\nimport IMadlib from '../types/IMadlib';\n\nlet host: string;\n\nif (window.location.host === 'localhost') {\n  host = 'http://localhost:8080';\n} else {\n  host = 'https://krevat-madlibs.herokuapp.com';\n}\n\nexport const getAllTemplates = async (): Promise<IMadlibTemplate[]> => {\n  const response = await axios.get<IMadlibTemplate[]>(`${host}/templates`);\n\n  return response.data;\n};\n\nexport const getTemplate = async (id: string): Promise<IMadlibTemplate | null> => {\n  try {\n    const response = await axios.get<IMadlibTemplate>(`${host}/templates/${id}`);\n\n    return response.data;\n  } catch (ex) {\n    return null;\n  }\n};\n\nexport const addTemplate = async (template: IMadlibTemplate): Promise<IMadlibTemplate> => {\n  const response = await axios.post<IMadlibTemplate>(`${host}/templates`, template);\n\n  return response.data;\n};\n\nexport const addMadlib = async (madlib: IMadlib): Promise<IMadlib> => {\n  const response = await axios.post<IMadlib>(`${host}/madlibs`, madlib);\n\n  return response.data;\n};\n\nexport const getMadlib = async (id: string): Promise<IMadlib> => {\n  const response = await axios.get<IMadlib>(`${host}/madlibs/${id}`);\n\n  return response.data;\n};\n\nexport const getMadlibsByTemplate = async (id: string): Promise<IMadlib[]> => {\n  const response = await axios.get<IMadlib[]>(`${host}/templates/${id}/madlibs`);\n\n  return response.data;\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Jumbotron, Container } from 'react-bootstrap';\n\nconst Home = () => (\n  <div>\n    <Jumbotron>\n      <Container>\n        <h1>Happy Mother&apos;s Day!</h1>\n        <p className=\"mt-4 lead\">You wanted a code. So here is a code!</p>\n        <p>\n          To write your own Mother&apos;s Day Madlibs, head over to the{' '}\n          <Link to=\"/templates\">templates page</Link> and get started!\n        </p>\n      </Container>\n    </Jumbotron>\n  </div>\n);\n\nexport default Home;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card, Button } from 'react-bootstrap';\nimport IMadlibTemplate from '../types/IMadlibTemplate';\n\ninterface IProps {\n  template: IMadlibTemplate;\n}\n\nconst TemplateCard: React.FC<IProps> = props => {\n  const { template } = props;\n\n  return (\n    <Card style={{ width: '18.5rem' }} className=\"m-2\">\n      <Card.Body>\n        <Card.Title>{template.title}</Card.Title>\n        <div style={{ display: 'flex', justifyContent: 'space-evenly' }}>\n          <Button as={Link} to={`/templates/${template.id!}/madlibs`}>\n            Explore Madlibs\n          </Button>\n          <Button as={Link} to={`/templates/${template.id!}`}>\n            Fill out!\n          </Button>\n        </div>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default TemplateCard;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Container, Button } from 'react-bootstrap';\nimport IMadlibTemplate from '../types/IMadlibTemplate';\nimport { getAllTemplates } from '../services/mainService';\nimport TemplateCard from './TemplateCard';\n\nconst Templates = () => {\n  const [templates, setTemplates] = useState<IMadlibTemplate[]>([]);\n\n  useEffect(() => {\n    let valid = true;\n\n    (async () => {\n      const temps = await getAllTemplates();\n      if (valid) {\n        setTemplates(temps);\n      }\n    })();\n\n    return () => {\n      valid = false;\n    };\n  }, []);\n\n  return (\n    <Container>\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n        <h1>Madlib Templates</h1>\n        <Button\n          as={Link}\n          to=\"/templates/new\"\n          style={{ display: 'flex', alignItems: 'center', fontWeight: 'bold' }}\n        >\n          Create New Template\n        </Button>\n      </div>\n      <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fill, 20rem)' }}>\n        {templates.map(template => (\n          <TemplateCard key={template.id!} template={template} />\n        ))}\n      </div>\n    </Container>\n  );\n};\n\nexport default Templates;\n","import React, { useState, useEffect } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { Container, Form, Button } from 'react-bootstrap';\nimport IMadlibTemplate from '../types/IMadlibTemplate';\nimport IMadlibPair from '../types/IMadlibPair';\nimport IMadlibPairValue from '../types/IMadlibPartValue';\nimport IMadlib from '../types/IMadlib';\nimport { getTemplate, addMadlib } from '../services/mainService';\n\ntype TParams = {\n  id: string;\n};\n\nconst Template: React.FunctionComponent<RouteComponentProps<TParams>> = props => {\n  const [template, setTemplate] = useState<IMadlibTemplate | null>(null);\n  const [title, setTitle] = useState('');\n  const [descBody, setDescBody] = useState<Array<string | IMadlibPair>>([]);\n  const [fields, setFields] = useState<Array<(IMadlibPairValue & { value: string }) | null>>([]);\n  const [name, setName] = useState('');\n\n  // eslint-disable-next-line react/destructuring-assignment\n  const { id } = props.match.params;\n\n  useEffect(() => {\n    let valid = true;\n\n    (async () => {\n      const res = await getTemplate(id);\n\n      if (valid) {\n        if (!res) {\n          props.history.push('/templates');\n        } else {\n          const indices = [...res.description.matchAll(/@\\[(.*?)\\]/g)].map(match => match.index);\n\n          const body: Array<string | IMadlibPair> = [];\n          let lastIndex = 0;\n          const workingFields: Array<IMadlibPairValue | null> = [];\n\n          let partIndex = 0;\n\n          if (indices[0] === 0) {\n            body.push(res.templateWords[partIndex]);\n            lastIndex = res.templateWords[partIndex].partOfSpeech.length + 3;\n            workingFields.push({ madlibPair: res.templateWords[partIndex], value: '' });\n            partIndex += 1;\n          }\n\n          indices.forEach(index => {\n            if (index) {\n              body.push(res.description.substring(lastIndex, index));\n              body.push(res.templateWords[partIndex]);\n              workingFields.push(null);\n              workingFields.push({ madlibPair: res.templateWords[partIndex], value: '' });\n              lastIndex = index + res.templateWords[partIndex].partOfSpeech.length + 3;\n              partIndex += 1;\n            }\n          });\n\n          body.push(res.description.substring(lastIndex));\n\n          setTemplate(res);\n          setDescBody(body);\n          setFields(workingFields);\n        }\n      }\n    })();\n\n    return () => {\n      valid = false;\n    };\n  }, []);\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>, index: number) => {\n    const copiedFields = [...fields];\n\n    copiedFields[index]!.value = e.target.value;\n\n    setFields(copiedFields);\n  };\n\n  const handleSubmit = async () => {\n    const copiedFields = fields.filter(field => field != null);\n\n    if (copiedFields.some(field => field?.value.length === 0) || name.length === 0) {\n      return;\n    }\n\n    let valueIndex = 0;\n    let body = '';\n    descBody.forEach(part => {\n      if (typeof part === 'string') {\n        body += part;\n      } else {\n        body += copiedFields[valueIndex]?.value;\n        valueIndex += 1;\n      }\n    });\n\n    const madlib: IMadlib = {\n      id: '',\n      title,\n      templateId: id,\n      text: body,\n      creator: name,\n    };\n\n    const insertedMadlib = await addMadlib(madlib);\n\n    props.history.push(`/templates/${insertedMadlib.templateId}/madlibs/${insertedMadlib.id}`);\n  };\n\n  return (\n    <Container>\n      {template ? (\n        <>\n          <h1>{template.title}</h1>\n          <Form.Control\n            placeholder=\"Your New Title\"\n            className=\"mt-4 mb-4\"\n            value={title}\n            onChange={e => setTitle(e.target.value)}\n          />\n          <div style={{ lineHeight: '4rem' }}>\n            {descBody.map((part: string | IMadlibPair, index) => {\n              const field = fields[index];\n              return (\n                <>\n                  {typeof part === 'string' ? (\n                    <span>{part}</span>\n                  ) : (\n                    <>\n                      {field != null && (\n                        <input\n                          style={{\n                            lineHeight: '1rem',\n                            border: '1px solid lightgrey',\n                            borderRadius: '3px',\n                          }}\n                          value={field.value}\n                          onChange={e => handleChange(e, index)}\n                          placeholder={field.madlibPair.partOfSpeech}\n                        />\n                      )}\n                    </>\n                  )}\n                </>\n              );\n            })}\n          </div>\n\n          <Form.Control\n            placeholder=\"Your name\"\n            className=\"mt-4 mb-3\"\n            value={name}\n            onChange={e => setName(e.target.value)}\n          />\n\n          <Button onClick={() => handleSubmit()}>Create Madlib!</Button>\n        </>\n      ) : (\n        <h1>Loading</h1>\n      )}\n    </Container>\n  );\n};\n\nexport default Template;\n","import { SuggestionDataItem } from 'react-mentions';\n\nconst suggestions: SuggestionDataItem[] = [\n  {\n    id: 'a',\n    display: 'Adjective',\n  },\n  {\n    id: 'aco',\n    display: 'Adjective (color)',\n  },\n  {\n    id: 'aem',\n    display: 'Adjective (emotion)',\n  },\n  {\n    id: 'ana',\n    display: 'Adjective (nationality)',\n  },\n  {\n    id: 'adv',\n    display: 'Adverb',\n  },\n  {\n    id: 'exc',\n    display: 'Exclamation',\n  },\n  {\n    id: 'n',\n    display: 'Noun',\n  },\n  {\n    id: 'nan',\n    display: 'Noun (animal)',\n  },\n  {\n    id: 'nac',\n    display: 'Noun (article of clothing)',\n  },\n  {\n    id: 'nbp',\n    display: 'Noun (body part)',\n  },\n  {\n    id: 'nce',\n    display: 'Noun (celebrity)',\n  },\n  {\n    id: 'nci',\n    display: 'Noun (city)',\n  },\n  {\n    id: 'nfo',\n    display: 'Noun (food)',\n  },\n  {\n    id: 'nle',\n    display: 'Noun (letter)',\n  },\n  {\n    id: 'noc',\n    display: 'Noun (occupation)',\n  },\n  {\n    id: 'npe',\n    display: 'Noun (person)',\n  },\n  {\n    id: 'npf',\n    display: 'Noun (person, female)',\n  },\n  {\n    id: 'npm',\n    display: 'Noun (person, male)',\n  },\n  {\n    id: 'npa',\n    display: 'Noun (place)',\n  },\n  {\n    id: 'npl',\n    display: 'Noun (plural)',\n  },\n  {\n    id: 'npr',\n    display: 'Noun (proper)',\n  },\n  {\n    id: 'num',\n    display: 'Number',\n  },\n  {\n    id: 'v',\n    display: 'Verb',\n  },\n  {\n    id: 'vei',\n    display: 'Verb (ending in -ing)',\n  },\n  {\n    id: 'ves',\n    display: 'Verb (ending in -s)',\n  },\n  {\n    id: 'vpp',\n    display: 'Verb (past participle)',\n  },\n  {\n    id: 'vpt',\n    display: 'Verb (past tense)',\n  },\n];\n\nexport default suggestions;\n","import React, { useState } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { Container, Form, Button } from 'react-bootstrap';\nimport { MentionsInput, Mention } from 'react-mentions';\nimport madlibPartsofSpeech from '../services/madlibPartsOfSpeech';\nimport IMadlibTemplate from '../types/IMadlibTemplate';\nimport IMadlibPair from '../types/IMadlibPair';\nimport { addTemplate } from '../services/mainService';\n\nconst NewTemplate: React.FunctionComponent<RouteComponentProps> = props => {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n\n  const handleSubmit = async (e: React.ChangeEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if (title.length === 0 || description.length === 0) {\n      return;\n    }\n\n    const templateWords: IMadlibPair[] = [...description.matchAll(/@\\[(.*?)\\]/g)].map(match => ({\n      partOfSpeech: match[1],\n    }));\n\n    if (templateWords.length === 0) {\n      return;\n    }\n\n    const template: IMadlibTemplate = {\n      id: null,\n      title,\n      description,\n      templateWords,\n    };\n\n    const insertedTemplate = await addTemplate(template);\n\n    props.history.push(`/templates/${insertedTemplate.id}`);\n  };\n\n  const mentionsStyles = {\n    input: {\n      overflow: 'auto',\n      height: 300,\n      margin: 0,\n    },\n    highlighter: {\n      overflow: 'hidden',\n    },\n    suggestions: {\n      list: {\n        backgroundColor: 'white',\n        border: '1px solid rgba(0,0,0,0.15)',\n        fontSize: 14,\n      },\n\n      item: {\n        padding: '5px 15px',\n        borderBottom: '1px solid rgba(0,0,0,0.15)',\n\n        '&focused': {\n          backgroundColor: '#cee4e5',\n        },\n      },\n    },\n    '&multiLine': {\n      control: {\n        border: '1px solid lightgrey',\n        borderRadius: '3px',\n      },\n\n      highlighter: {\n        padding: 9,\n      },\n\n      input: {\n        padding: 9,\n        minHeight: 63,\n        outline: 0,\n        border: 0,\n      },\n    },\n  };\n\n  return (\n    <Container>\n      <h1>New Template</h1>\n      <Form className=\"mt-3\" onSubmit={handleSubmit}>\n        <Form.Group controlId=\"title\">\n          <Form.Label>Enter your Madlibs title here!</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"e.g. Mom to the rescue!\"\n            value={title}\n            onChange={e => setTitle(e.target.value)}\n          />\n        </Form.Group>\n        <Form.Group controlId=\"description\">\n          <Form.Label>Enter your description here! Use @ to add madlibs</Form.Label>\n          <MentionsInput\n            value={description}\n            onChange={e => setDescription(e.target.value)}\n            style={mentionsStyles}\n          >\n            <Mention\n              trigger=\"@\"\n              data={madlibPartsofSpeech}\n              markup=\"@[__display__]\"\n              style={{ backgroundColor: '#cee4e5' }}\n              renderSuggestion={(suggestion, search, highlightedDisplay) => (\n                <div>{highlightedDisplay}</div>\n              )}\n            />\n          </MentionsInput>\n        </Form.Group>\n        <Button type=\"submit\">Create Template</Button>\n      </Form>\n    </Container>\n  );\n};\n\nexport default NewTemplate;\n","import React, { useState, useEffect } from 'react';\nimport { Link, RouteComponentProps } from 'react-router-dom';\nimport { Container, Button } from 'react-bootstrap';\nimport IMadlib from '../types/IMadlib';\nimport IMadlibTemplate from '../types/IMadlibTemplate';\nimport { getMadlib, getTemplate } from '../services/mainService';\n\ntype TParams = {\n  id: string;\n};\n\nconst Madlib: React.FunctionComponent<RouteComponentProps<TParams>> = props => {\n  const [madlib, setMadlib] = useState<IMadlib | null>(null);\n  const [template, setTemplate] = useState<IMadlibTemplate | null>(null);\n\n  // eslint-disable-next-line react/destructuring-assignment\n  const { id } = props.match.params;\n\n  useEffect(() => {\n    let valid = true;\n\n    (async () => {\n      const madlibRes = await getMadlib(id);\n      const templateRes = await getTemplate(madlibRes.templateId);\n\n      if (valid) {\n        setMadlib(madlibRes);\n        setTemplate(templateRes);\n      }\n    })();\n\n    return () => {\n      valid = false;\n    };\n  }, []);\n\n  return (\n    <Container>\n      {madlib && template ? (\n        <>\n          <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n            <h1>{madlib.title}</h1>\n            <div>\n              <Button\n                style={{ fontWeight: 'bold' }}\n                className=\"mr-3\"\n                as={Link}\n                to={`/templates/${madlib.templateId}/madlibs`}\n              >\n                Back to Madlibs\n              </Button>\n              <Button\n                style={{ fontWeight: 'bold' }}\n                as={Link}\n                to={`/templates/${madlib.templateId}`}\n              >\n                Use This Template!\n              </Button>\n            </div>\n          </div>\n          <p className=\"lead\">\n            Written by {madlib.creator} using the {template.title} template\n          </p>\n          <p style={{ lineHeight: '2.4rem' }}>{madlib.text}</p>\n        </>\n      ) : (\n        <h1>Loading</h1>\n      )}\n    </Container>\n  );\n};\n\nexport default Madlib;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card, Button } from 'react-bootstrap';\nimport IMadlib from '../types/IMadlib';\n\ninterface IProps {\n  madlib: IMadlib;\n}\n\nconst MadlibCard: React.FunctionComponent<IProps> = props => {\n  const { madlib } = props;\n\n  return (\n    <Card style={{ width: '18.5rem' }} className=\"m-2\">\n      <Card.Body>\n        <Card.Title>{madlib.title}</Card.Title>\n        <div style={{ display: 'flex', justifyContent: 'space-evenly' }}>\n          <Button as={Link} to={`/templates/${madlib.templateId}/madlibs/${madlib.id}`}>\n            View\n          </Button>\n        </div>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default MadlibCard;\n","import React, { useState, useEffect } from 'react';\nimport { Link, RouteComponentProps } from 'react-router-dom';\nimport { Container, Button } from 'react-bootstrap';\nimport IMadlibTemplate from '../types/IMadlibTemplate';\nimport IMadlib from '../types/IMadlib';\nimport { getTemplate, getMadlibsByTemplate } from '../services/mainService';\nimport MadlibCard from './MadlibCard';\n\ntype TParams = {\n  id: string;\n};\n\nconst Madlibs: React.FunctionComponent<RouteComponentProps<TParams>> = props => {\n  const [template, setTemplate] = useState<IMadlibTemplate | null>(null);\n  const [madlibs, setMadlibs] = useState<IMadlib[]>([]);\n\n  // eslint-disable-next-line react/destructuring-assignment\n  const { id } = props.match.params;\n\n  useEffect(() => {\n    let valid = true;\n\n    (async () => {\n      const res = await getTemplate(id);\n\n      if (valid) {\n        setTemplate(res);\n      }\n    })();\n\n    (async () => {\n      const res = await getMadlibsByTemplate(id);\n\n      if (valid) {\n        setMadlibs(res);\n      }\n    })();\n\n    return () => {\n      valid = false;\n    };\n  }, []);\n\n  return (\n    <Container>\n      {template ? (\n        <>\n          <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n            <h1>{template.title} Madlibs</h1>\n            <div style={{ display: 'flex' }}>\n              <Button\n                as={Link}\n                className=\"mr-3\"\n                to=\"/templates\"\n                style={{ fontWeight: 'bold', display: 'flex', alignItems: 'center' }}\n              >\n                Back to Templates\n              </Button>\n              <Button\n                style={{ fontWeight: 'bold', display: 'flex', alignItems: 'center' }}\n                as={Link}\n                to={`/templates/${template.id}`}\n              >\n                Use This Template!\n              </Button>\n            </div>\n          </div>\n          {madlibs.map(ml => (\n            <MadlibCard madlib={ml} />\n          ))}\n        </>\n      ) : (\n        <h1>Loading...</h1>\n      )}\n    </Container>\n  );\n};\n\nexport default Madlibs;\n","import React from 'react';\n// eslint-disable-next-line object-curly-newline\nimport { HashRouter, Link, Switch, Route } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Nav, Navbar, Container } from 'react-bootstrap';\nimport Home from './components/Home';\nimport Templates from './components/Templates';\nimport Template from './components/Template';\nimport NewTemplate from './components/NewTemplate';\nimport Madlib from './components/Madlib';\nimport Madlibs from './components/Madlibs';\n\nconst App = () => (\n  <div>\n    <HashRouter>\n      <Navbar bg=\"light\" expand=\"lg\" className=\"mb-4\">\n        <Container>\n          <Navbar.Brand as={Link} to=\"/\">\n            Madlibs!\n          </Navbar.Brand>\n          <Nav className=\"mr-auto\">\n            <Nav.Link as={Link} to=\"/templates\">\n              Templates\n            </Nav.Link>\n          </Nav>\n        </Container>\n      </Navbar>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/templates/:templateId/madlibs/:id\" component={Madlib} />\n        <Route exact path=\"/templates\" component={Templates} />\n        <Route exact path=\"/templates/new\" component={NewTemplate} />\n        <Route exact path=\"/templates/:id/madlibs\" component={Madlibs} />\n        <Route exact path=\"/templates/:id\" component={Template} />\n      </Switch>\n    </HashRouter>\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}